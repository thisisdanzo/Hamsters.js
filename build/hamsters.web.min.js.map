{"version":3,"sources":["webpack:///webpack/bootstrap 601f71583c61efa5f785","webpack:///./hamsters.js","webpack:///./core/version.js","webpack:///./core/habitat.js","webpack:///../~/process/browser.js","webpack:///./core/data.js","webpack:///./core/logger.js","webpack:///./core/wheel.js","webpack:///./core/pool.js","webpack:///./core/memoizer.js"],"names":["hamstersjs","version","hamstersVersion","maxThreads","hamstersHabitat","logicalThreads","habitat","data","hamstersData","pool","hamstersPool","logger","hamstersLogger","memoizer","hamstersMemoizer","run","hamstersRun","promise","hamstersPromise","init","initializeLibrary","startOptions","processStartOptions","legacy","persistence","spawnHamsters","info","habitatKeys","key","Object","keys","indexOf","toLowerCase","Worker","params","functionToRun","scope","id","tasks","length","count","aggregate","output","workers","memoize","dataType","input","threads","hamstersJob","prepareJob","indexes","generateIndexes","array","task","resolve","reject","scheduleTask","then","results","catch","error","messsage","Promise","hamstersTask","onSuccess","onError","hamsters","module","exports","majorVersion","minorVersion","patchVersion","debug","importScripts","isLegacyEnvironment","legacyWheel","hamstersWheel","browser","isBrowser","webWorker","isWebWorker","node","isNode","reactNative","isReactNative","shell","isShell","transferrable","supportsTransferrableObjects","atomics","supportsAtomicOperations","proxies","supportsProxies","isIE10","isInternetExplorer","determineGlobalThreads","locateWorkerObject","sharedWorker","locateSharedWorkerObject","selectHamsterWheel","max","navigator","hardwareConcurrency","userAgent","SharedWorker","window","RegExp","isNaN","test","process","global","isLegacy","isLegacyDevice","supportsSharedWorkers","legacyDevice","lacksWorkerSupport","legacyAgents","supports","workerBlob","generateBlob","SharedHamster","e","Uint8Array","SharedArrayBuffer","Proxy","worker","regular","generateWorkerBlob","randomArray","aggregateArrays","aggregateThreadOutputs","determineSubArrayIndexes","createBlob","createDataBlob","processDataType","sortOutput","sortArray","getOutput","prepareOutput","prepareFunction","feedHamster","messageWorker","hamster","hamsterFood","postMessage","JSON","stringify","ie10","port","prepareTransferBuffers","buffers","buffer","push","Array","isArray","ArrayBuffer","functionBody","String","startingIndex","endingIndex","substring","workerLogic","hamsterBlob","dataBlobURL","URL","createObjectURL","typedArrayFromBuffer","arr","order","prototype","sort","call","a","b","reverse","types","Uint32Array","Uint16Array","Uint8ClampedArray","Int32Array","Int16Array","Int8Array","Float32Array","Float64Array","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","textContent","Blob","BlobMaker","locateBlobBuilder","blob","append","type","getBlob","Math","round","random","reduce","concat","i","len","bufferLength","offset","set","n","size","ceil","start","end","index","slice","subarray","logBook","warning","infoLog","warningLog","errorLog","errorFromThread","saveLogEntry","saveToLogBook","getLogEntries","fetchLogBook","createAndSaveStampedMessage","generateTimeStampedMessage","searchLogEntries","searchLogBook","message","timeStampedMessage","console","warn","record","Date","now","errorMessage","lineno","filename","eventType","logBookEntries","searchString","searchResults","eventTypeResults","tmpEntries","hasOwnProperty","findStringInLogBook","finalResults","findStringInLogBookAllTypes","total","wheel","workerScaffold","regularScaffold","legacyScaffold","self","rtn","addEventListener","incomingConnection","ports","incomingMessage","eval","prepareReturn","returnObject","onmessage","Function","setTimeout","running","pending","fetchHamster","grabHamster","arguments","item","runTask","thread","threadId","spawnHamster","newWheel","threadArray","prepareMeal","registerTask","keepTrackOfThread","trainHamster","addWorkToPending","subArray","getSubArrayUsingIndex","onThreadResponse","splice","parse","returnOutputAndRemoveTask","processQueue","shift","terminate","onThreadError","onmessageerror","onerror","hamsterWheel","hamsterPool","maxCacheEntries","cacheEntries","itemCached","isItemCached","fetchItem","fetchItemFromCache","saveItem","saveItemToCache","method","fn","cacheItem","cachedResult","itemToCache","cachedItems"],"mappings":"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A;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;;AAErC;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;ACvLtC;;AAEA;;;;;;;;;AASA;;;;AAEA;;;;AACA;;;;;;;;KAEMG,I;;AAEJ;;;;AAIA,mBAAc;AAAA;;AACZ,UAAKyH,WAAL,GAAmB,KAAKA,WAAxB;AACA,UAAKC,eAAL,GAAuB,KAAKC,sBAA5B;AACA,UAAK/E,eAAL,GAAuB,KAAKgF,wBAA5B;AACA,UAAKC,UAAL,GAAkB,KAAKC,cAAvB;AACA,UAAKN,kBAAL,GAA0B,KAAKA,kBAA/B;AACA,UAAKO,eAAL,GAAuB,KAAKA,eAA5B;AACA,UAAKC,UAAL,GAAkB,KAAKC,SAAvB;AACA,UAAKC,SAAL,GAAiB,KAAKC,aAAtB;AACA,UAAKzF,UAAL,GAAkB,KAAK0F,eAAvB;AACA,UAAKC,WAAL,GAAmB,KAAKC,aAAxB;AACD;;AAED;;;;;;;;;mCAKcC,O,EAASC,W,EAAazI,O,EAAS;AAC3C,WAAGA,QAAQ6E,WAAX,EAAwB;AACtB,gBAAO2D,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","file":"hamsters.web.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 601f71583c61efa5f785","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersVersion from './core/version';\nimport hamstersHabitat from './core/habitat';\nimport hamstersPool from './core/pool';\nimport hamstersData from './core/data';\nimport hamstersLogger from './core/logger';\nimport hamstersMemoizer from './core/memoizer';\n\nclass hamstersjs {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.version = hamstersVersion;\n    this.maxThreads = hamstersHabitat.logicalThreads;\n    this.habitat = hamstersHabitat;\n    this.data = hamstersData;\n    this.pool = hamstersPool;\n    this.logger = hamstersLogger;\n    this.memoizer = hamstersMemoizer;\n    this.run = this.hamstersRun;\n    this.promise = this.hamstersPromise;\n    this.init = this.initializeLibrary;\n  }\n\n  /**\n  * @function initializeLibrary - Prepares & initializes Hamsters.js library\n  * @param {object} startOptions - Provided library functionality options\n  */\n  initializeLibrary(startOptions) {\n    if (typeof startOptions !== 'undefined') {\n      this.processStartOptions(startOptions);\n    }\n    if(!this.habitat.legacy && this.habitat.persistence === true) {\n      hamstersPool.spawnHamsters(this.maxThreads);\n    }\n    this.logger.info(`Hamsters.js v${this.version} initialized using up to ${this.maxThreads} threads.`);\n    delete this.init;\n  }\n\n  /**\n  * @function processStartOptions - Adjusts library functionality based on provided options\n  * @param {object} startOptions - Provided library functionality options\n  */\n  processStartOptions(startOptions) {\n    // Add options to override library environment behavior\n    let habitatKeys = [\n      'worker', 'sharedworker',\n      'legacy', 'webworker',\n      'reactnative', 'atomics',\n      'proxies', 'transferrable',\n      'browser', 'shell', \n      'node', 'debug',\n      'persistence', 'importscripts'\n    ];\n    let key = null;\n    for (key of Object.keys(startOptions)) {\n      if (habitatKeys.indexOf(key.toLowerCase()) !== -1) {\n        this.habitat[key] = startOptions[key];\n      } else {\n        this[key] = startOptions[key];\n      }\n    }\n    // Ensure legacy mode is disabled when we pass a third party worker library\n    if(typeof this.habitat.Worker === 'function' && startOptions['legacy'] !== true) {\n      this.habitat.legacy = false;\n    }\n  }\n\n  /**\n  * @constructor\n  * @function hamstersTask - Constructs a new task object from provided arguments\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @param {object} scope - Reference to main library context\n  * @return {object} new Hamsters.js task\n  */\n  hamstersTask(params, functionToRun, scope) {\n    this.id = scope.pool.tasks.length;\n    this.count = 0;\n    this.aggregate = (params.aggregate || false);\n    this.output = [];\n    this.workers = [];\n    this.memoize = (params.memoize || false);\n    this.dataType = (params.dataType ? params.dataType.toLowerCase() : null);\n    this.input = params;\n    // Do not modify function if we're running on the main thread for legacy fallback\n    this.threads = (scope.habitat.legacy ? 1 : (params.threads || 1));\n    this.input.hamstersJob = (scope.habitat.legacy ? functionToRun : scope.data.prepareJob(functionToRun));\n    // Determine sub array indexes, precalculate ahead of time so we can pull data only when executing on a thread \n    this.indexes = scope.data.generateIndexes(this.input.array, this.threads);\n  }\n\n  scheduleTask(task, resolve, reject) {\n    return this.pool.scheduleTask(task, this).then((results) => {\n      resolve(results);\n    }).catch((error) => {\n      hamstersLogger.error(error.messsage, reject);\n    });\n  }\n\n  /**\n  * @async\n  * @function hamstersPromise - Calls library functionality using async promises\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @return {array} Results from functionToRun.\n  */\n  hamstersPromise(params, functionToRun) {\n    return new Promise((resolve, reject) => {\n      let task = new this.hamstersTask(params, functionToRun, this);\n      this.scheduleTask(task, resolve, reject);\n    });\n  }\n\n  /**\n  * @async\n  * @function hamstersRun - Calls library functionality using async callbacks\n  * @param {object} params - Provided library execution options\n  * @param {function} functionToRun - Function to execute\n  * @param {function} onSuccess - Function to call upon successful execution\n  * @param {function} onError - Function to call upon execution failure\n  * @return {array} Results from functionToRun.\n  */\n  hamstersRun(params, functionToRun, onSuccess, onError) {\n    let task = new this.hamstersTask(params, functionToRun, this);\n    this.scheduleTask(task, onSuccess, onError);\n  }\n}\n\nvar hamsters = new hamstersjs();\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsters;\n}\n\n\n// WEBPACK FOOTER //\n// ./hamsters.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nconst majorVersion = 5;\nconst minorVersion = 1;\nconst patchVersion = 3;\nconst hamstersVersion = `${majorVersion}.${minorVersion}.${patchVersion}`;\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersVersion;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/version.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersData from './data';\nimport hamstersWheel from './wheel';\n\nclass habitat {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.debug = false;\n    this.importScripts = null;\n    this.memoize = false;\n    this.persistence = true;\n    this.legacy = this.isLegacyEnvironment();\n    this.legacyWheel = hamstersWheel.legacy,\n    this.browser = this.isBrowser();\n    this.webWorker = this.isWebWorker();\n    this.node = this.isNode();\n    this.reactNative = this.isReactNative();\n    this.shell = this.isShell();\n    this.transferrable = this.supportsTransferrableObjects();\n    this.atomics = this.supportsAtomicOperations();\n    this.proxies = this.supportsProxies();\n    this.isIE10 = !this.isNode() && !this.isReactNative() && this.isInternetExplorer(10);\n    this.logicalThreads = this.determineGlobalThreads();\n    this.Worker = this.locateWorkerObject();\n    this.sharedWorker = this.locateSharedWorkerObject();\n    this.selectHamsterWheel = this.selectHamsterWheel;\n  }\n\n  /**\n  * @function determineGlobalThreads - Determines max number of threads to use\n  */\n  determineGlobalThreads() {\n    let max = 4;\n    if(typeof navigator !== 'undefined') {\n      if(typeof navigator.hardwareConcurrency !== 'undefined') {\n        max = navigator.hardwareConcurrency;\n      }\n      if(max > 20 && navigator.userAgent.toLowerCase().indexOf('firefox') !== -1) {\n        max = 20;\n      }\n    }\n    return max;\n  }\n\n  /**\n  * @function locateWorkerObject - Attempts to find a global Worker object\n  */\n  locateWorkerObject() {\n    return typeof Worker !== 'undefined' ? Worker : false;\n  }\n\n  /**\n  * @function locateSharedWorkerObject - Attempts to find a global SharedWorker object\n  */\n  locateSharedWorkerObject() {\n    return typeof SharedWorker !== 'undefined' ? SharedWorker : false;\n  }\n\n  /**\n  * @function isBrowser - Detects if execution environment is a browser\n  */\n  isBrowser() {\n    return typeof window === \"object\";\n  }\n\n  /**\n  * @function isInternetExplorer - Detects if execution environment is internet explorer\n  */\n  isInternetExplorer(version) {\n    return (new RegExp('msie' + (!isNaN(version) ? ('\\\\s'+version) : ''), 'i').test(navigator.userAgent));\n  }\n\n  /**\n  * @function isNode - Detects if execution environment is node.js\n  */\n  isNode() {\n    return typeof process === \"object\" && typeof require === \"function\" && !this.isWebWorker() && !this.browser;\n  }\n\n  /**\n  * @function isWebWorker - Detects if execution environment is a webworker\n  */\n  isWebWorker() {\n    return typeof importScripts === \"function\";\n  }\n\n  /**\n  * @function isReactNative - Detects if execution environment is reactNative\n  */\n  isReactNative() {\n    return !this.isNode() && typeof global === 'object' && !this.browser;\n  }\n\n  /**\n  * @function isShell - Detects if execution environment is a shell\n  */\n  isShell() {\n    return this.browser && !this.isNode() && !this.isWebWorker() && !this.isReactNative();\n  }\n\n  /**\n  * @function isLegacyEnvironment - Detects if execution environment is a legacy environment\n  */\n  isLegacyEnvironment() {\n    let isLegacy = false;\n    // Force legacy mode for known devices that don't support threading\n    if (this.browser && !this.isReactNative()) {\n      isLegacy = this.isLegacyDevice();\n    }\n    // Detect sharedWorker support for use within webworkers\n    if (this.isWebWorker() && typeof this.SharedWorker !== 'undefined') {\n      isLegacy = !this.supportsSharedWorkers();\n    }\n    return isLegacy || !!!this.locateWorkerObject();\n  }\n\n  isLegacyDevice() {\n    let legacyDevice = false;\n    let userAgent = navigator.userAgent;\n    let lacksWorkerSupport = (typeof this.Worker === 'undefined');\n    let legacyAgents = ['Kindle/3.0', 'Mobile/8F190', 'IEMobile'];\n    if (lacksWorkerSupport || legacyAgents.indexOf(userAgent) !== -1) {\n      legacyDevice = true;\n    }\n    return legacyDevice;\n  }\n\n  supportsSharedWorkers() {\n    let supports = false;\n    try {\n      let workerBlob = hamstersData.generateBlob();\n      let SharedHamster = new this.SharedWorker(workerBlob, 'SharedHamsterWheel');\n      supports = true;\n    } catch (e) {\n      supports = false;\n    }\n    return supports;\n  }\n\n  /**\n  * @function supportsTransferrableObjects - Detects if execution environment supports typed arrays\n  */\n  supportsTransferrableObjects() {\n    return typeof Uint8Array !== 'undefined';\n  }\n\n  /**\n  * @function supportsAtomicOperations - Detects if execution environment supports shared array buffers\n  */\n  supportsAtomicOperations() {\n    return typeof SharedArrayBuffer !== 'undefined';\n  }\n\n  /**\n  * @function supportsProxies - Detects if execution environment supports proxy objects\n  */\n  supportsProxies() {\n    return typeof Proxy !== 'undefined';\n  }\n\n  /**\n  * @function scheduleTask - Determines which scaffold to use for proper execution for various environments\n  */\n  selectHamsterWheel() {\n    if(this.isIE10) {\n      return './common/hamstersWheel.js';\n    }\n    if(this.reactNative) {\n      return './common/rnHamstersWheel.js';\n    }\n    if(this.webWorker) {\n      return hamstersWheel.worker;\n    }\n    if (this.node) {\n      return hamstersWheel.regular;\n    }\n    return hamstersData.generateWorkerBlob(hamstersWheel.regular);\n  }\n}\n\nvar hamstersHabitat = new habitat();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersHabitat;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/habitat.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/process/browser.js\n// module id = 4\n// module chunks = 0","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersHabitat from './habitat';\nimport hamstersLogger from './logger';\n\nclass data {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.randomArray = this.randomArray;\n    this.aggregateArrays = this.aggregateThreadOutputs;\n    this.generateIndexes = this.determineSubArrayIndexes;\n    this.createBlob = this.createDataBlob;\n    this.generateWorkerBlob = this.generateWorkerBlob;\n    this.processDataType = this.processDataType;\n    this.sortOutput = this.sortArray;\n    this.getOutput = this.prepareOutput;\n    this.prepareJob = this.prepareFunction;\n    this.feedHamster = this.messageWorker;\n  }\n\n  /**\n  * @function messageWorker - Prepares message to send to thread\n  * @param {worker} hamster - Thread to message\n  * @param {object} hamsterFood - Message to send to thread\n  */  \n  messageWorker(hamster, hamsterFood, habitat) {\n    if(habitat.reactNative) {\n      return hamster.postMessage(JSON.stringify(hamsterFood));\n    }\n    if (habitat.ie10) {\n      return hamster.postMessage(hamsterFood);\n    }\n    if (habitat.webWorker) {\n      return hamster.port.postMessage(hamsterFood);\n    }\n    return hamster.postMessage(hamsterFood, this.prepareTransferBuffers(hamsterFood, habitat.transferrable));\n  }\n\n  /**\n  * @function prepareTransferBuffers - Prepares transferrable buffers for faster message passing\n  * @param {object} hamsterFood - Message to send to thread\n  */\n  prepareTransferBuffers(hamsterFood, transferrable) {\n    let buffers = [];\n    let key = null;\n    if(transferrable) {\n      for (key of Object.keys(hamsterFood)) {\n        if(hamsterFood[key].buffer) {\n          buffers.push(hamsterFood[key].buffer);\n        } else if(Array.isArray(hamsterFood[key]) && typeof ArrayBuffer !== 'undefined') {\n          buffers.push(new ArrayBuffer(hamsterFood[key]));\n        }\n      }\n    }\n    return buffers;\n  }\n\n  /**\n  * @function prepareFunction - Prepares transferrable buffers for faster message passing\n  * @param {function} functionBody - Message to send to thread\n  */\n  prepareFunction(functionBody) {\n    functionBody = String(functionBody);\n    if (!hamstersHabitat.webWorker) {\n      let startingIndex = (functionBody.indexOf(\"{\") + 1);\n      let endingIndex = (functionBody.length - 1);\n      return functionBody.substring(startingIndex, endingIndex);\n    }\n    return functionBody;\n  }\n\n  /**\n  * @function generateWorkerBlob - Creates blob uri for flexible scaffold loading\n  * @param {function} workerLogic - Scaffold to use within worker thread\n  */\n  generateWorkerBlob(workerLogic) {\n    let hamsterBlob = this.createDataBlob('(' + String(workerLogic) + ')();');\n    let dataBlobURL = URL.createObjectURL(hamsterBlob);\n    return dataBlobURL;\n  }\n\n  /**\n  * @function processDataType - Converts buffer into new typed array\n  * @param {string} dataType - Typed array type for this task\n  * @param {object} buffer - Buffer to convert\n  */\n  processDataType(dataType, buffer, transferrable) {\n    if(transferrable) {\n      return this.typedArrayFromBuffer(dataType, buffer);\n    }\n    return buffer;\n  }\n\n  /**\n  * @function prepareOutput - Prepares final task output\n  * @param {task} buffer - Task to prepare output for\n  */\n  prepareOutput(task, transferrable) {\n    if(task.aggregate && task.threads !== 1) {\n      return this.aggregateThreadOutputs(task.output, task.dataType, transferrable);\n    }\n    return task.output;\n  }\n\n  /**\n  * @function sortArray - Sorts array by defined order\n  * @param {object} arr - Array to sort\n  * @param {string} order - Defined sort order\n  */\n  sortArray(arr, order) {\n    switch(order) {\n      case 'desc':\n      case 'asc':\n        return Array.prototype.sort.call(arr, function(a, b) {\n          return (order === 'asc' ? (a - b) : (b - a)); \n        });\n      case 'ascAlpha':\n        return arr.sort();\n      case 'descAlpha':\n        return arr.reverse();\n      default:\n        return arr;\n    }\n  }\n\n  /**\n  * @function typedArrayFromBuffer - Converts buffer into new typed array\n  * @param {string} dataType - Typed array type for this task\n  * @param {object} buffer - Buffer to convert\n  */\n  typedArrayFromBuffer(dataType, buffer) {\n    const types = {\n      'uint32': Uint32Array,\n      'uint16': Uint16Array,\n      'uint8': Uint8Array,\n      'uint8clamped': Uint8ClampedArray,\n      'int32': Int32Array,\n      'int16': Int16Array,\n      'int8': Int8Array,\n      'float32': Float32Array,\n      'float64': Float64Array\n    };\n    if(!types[dataType]) {\n      return dataType;\n    }\n    return new types[dataType](buffer);\n  }\n\n\n  /**\n  * @function createDataBlob - Attempts to locate data blob builder, vender prefixes galore\n  */\n  locateBlobBuilder() {\n    if(typeof BlobBuilder !== 'undefined') {\n      return BlobBuilder;\n    }\n    if(typeof WebKitBlobBuilder !== 'undefined') {\n      return WebKitBlobBuilder;\n    }\n    if(typeof MozBlobBuilder !== 'undefined') {\n      return MozBlobBuilder;\n    }\n    if(typeof MSBlobBuilder !== 'undefined') {\n      return MSBlobBuilder;\n    }\n    return hamstersLogger.error('Environment does not support data blobs!');\n  }\n\n  /**\n  * @function createDataBlob - Creates new data blob from textContent\n  * @param {string} textContent - Provided text content for blob\n  */\n  createDataBlob(textContent) {\n    if(typeof Blob === 'undefined') {\n      let BlobMaker = this.locateBlobBuilder();\n      let blob = new BlobMaker();\n      blob.append([textContent], {\n        type: 'application/javascript'\n      });\n      return blob.getBlob();\n    }\n    return new Blob([textContent], {\n      type: 'application/javascript'\n    });\n  }\n\n  /**\n  * @function randomArray - Creates new random array\n  * @param {number} count - Number of random elements in array\n  * @param {function} onSuccess - onSuccess callback\n  */\n  randomArray(count, onSuccess) {\n    var randomArray = [];\n    while(count > 0) {\n      randomArray.push(Math.round(Math.random() * (100 - 1) + 1));\n      count -= 1;\n    }\n    onSuccess(randomArray);\n  }\n\n  /**\n  * @function aggregateThreadOutputs - Joins individual thread outputs into single result\n  * @param {array} input - Array of arrays to aggregate\n  * @param {string} dataType - Data type to use for typed array\n  */\n  aggregateThreadOutputs(input, dataType, transferrable) {\n    if(!dataType || !transferrable) {\n      return input.reduce(function(a, b) {\n        return a.concat(b);\n      });\n    }\n    let i = 0;\n    let len = input.length;\n    let bufferLength = 0;\n    for (i; i < len; i += 1) {\n      bufferLength += input[i].length;\n    }\n    let output = this.processDataType(dataType, bufferLength, transferrable);\n    let offset = 0;\n    for (i = 0; i < len; i += 1) {\n      output.set(input[i], offset);\n      offset += input[i].length;\n    }\n    return output;\n  }\n\n  /**\n  * @function determineSubArrayIndexes - Creates object containing starting and end value indexs for subarrays\n  * @param {array} array - Array to use\n  * @param {number} n - Number of subarrays to create indexes for\n  */\n  determineSubArrayIndexes(array, n) {\n    let i = 0;\n    let size = Math.ceil(array.length/n);\n    let indexes = [];\n    while(i < array.length) {\n      indexes.push({start: i, end: (i += size)});\n    }\n    return indexes;\n  }\n\n  /**\n  * @function getSubArrayUsingIndex - Fetches subarray from array using pre-determined start and end index\n  * @param {array} array - Array to split\n  * @param {index} object - Object containing index of start and end values for subarray\n  */\n  getSubArrayUsingIndex(array, index) {\n    if(array.slice) {\n      return array.slice(index['start'], index['end']);\n    }\n    return array.subarray(index['start'], index['end']);\n  }\n}\n\nvar hamstersData = new data();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersData;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/data.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersVersion from './version';\n\nclass logger {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.logBook = {\n      error: [], \n      warning: [], \n      info: []\n    };\n    this.info = this.infoLog;\n    this.warning = this.warningLog;\n    this.error = this.errorLog;\n    this.errorFromThread = this.errorFromThread;\n    this.saveLogEntry = this.saveToLogBook;\n    this.getLogEntries = this.fetchLogBook;\n    this.createAndSaveStampedMessage = this.generateTimeStampedMessage;\n    this.searchLogEntries = this.searchLogBook;\n  }\n\n  infoLog(message) {\n    let timeStampedMessage = this.createAndSaveStampedMessage('Info', message);\n    console.info(timeStampedMessage);\n  }\n\n  warningLog(message) {\n    let timeStampedMessage = this.createAndSaveStampedMessage('Warning', message);\n    console.warn(timeStampedMessage);\n  }\n\n  errorLog(message, reject) {\n    let timeStampedMessage = this.createAndSaveStampedMessage('Error', message);\n    console.error(timeStampedMessage);\n    if(reject) {\n      reject(timeStampedMessage);\n    } else {\n      return timeStampedMessage;\n    }\n  }\n\n  generateTimeStampedMessage(type, message) {\n    let record = `Hamsters.js v${hamstersVersion} ${type}: ${message} @ ${Date.now()}`\n    this.saveLogEntry(type.toLowerCase(), record);\n    return record;\n  }\n\n  errorFromThread(error, reject) {\n    let errorMessage = `#${error.lineno} in ${error.filename}: ${error.message}`;\n    this.errorLog(errorMessage, reject);\n  }\n\n  saveToLogBook(eventType, message) {\n    this.logBook[eventType].push(message);\n  }\n\n  fetchLogBook(eventType) {\n    if(eventType) {\n      return this.logBook[eventType];\n    }\n    return this.logBook;\n  }\n\n  findStringInLogBook(logBookEntries, searchString) {\n    let searchResults = [];\n    let i = 0;\n    for (i; i < logBookEntries.length; i++) {\n      if(logBookEntries[i].indexOf(searchString) !== -1) {\n        searchResults.push(logBookEntries[i]);\n      }\n    }\n    return searchResults;\n  }\n\n  findStringInLogBookAllTypes(logBook, searchString) {\n    let searchResults = [];\n    let key, eventTypeResults, tmpEntries = null;\n    for(key in logBook) {\n      if(logBook.hasOwnProperty(key)) {\n        tmpEntries = logBook[key];\n        eventTypeResults = this.findStringInLogBook(tmpEntries, searchString);\n        for (var i = eventTypeResults.length - 1; i >= 0; i--) {\n          searchResults.push(eventTypeResults[i])\n        }\n      }\n    }\n    return searchResults;\n  }\n\n  searchLogBook(searchString, eventType) {\n    let finalResults = [];\n    if(eventType) {\n      finalResults = this.findStringInLogBook(this.logBook[eventType], searchString);\n    } else {\n      finalResults = this.findStringInLogBookAllTypes(this.logBook, searchString);\n    }\n    return {\n      total: finalResults.length,\n      results: finalResults\n    };\n  }   \n}\n\nvar hamstersLogger = new logger();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersLogger;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/logger.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nclass wheel {\n\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.worker = this.workerScaffold;\n    this.regular = this.regularScaffold;\n    this.legacy = this.legacyScaffold;\n  }\n\n  /**\n  * @function workerScaffold - Provides worker body for library functionality when used within a worker [threads inside threads]\n  */\n  workerScaffold() {\n    'use strict';\n\n    if(typeof self === 'undefined') {\n      self = (global || window || this);\n    }\n\n    self.params = {};\n    self.rtn = {};\n\n    addEventListener('connect', (incomingConnection) => {\n      const port = incomingConnection.ports[0];\n      port.start();\n      port.addEventListener('message', (incomingMessage) => {\n        params = incomingMessage.data;\n        rtn = {\n          data: [],\n          dataType: params.dataType\n        };\n        if(params.importScripts) {\n          self.importScripts(params.importScripts);\n        }\n        eval(\"(\" + params.hamstersJob + \")\")();\n        port.postMessage(rtn);\n      }, false);\n    }, false);\n  }\n\n  /**\n  * @function workerScaffold - Provides worker body for library functionality\n  */\n  regularScaffold() {\n    'use strict';\n\n    if(typeof self === 'undefined') {\n      let self = (global || window || this);\n    }\n\n    self.params = {};\n    self.rtn = {};\n\n    function prepareReturn(returnObject) {\n      let dataType = returnObject.dataType;\n      if(dataType) {\n        returnObject.data = typedArrayFromBuffer(dataType, returnObject.data);\n      }\n      return returnObject;\n    }\n\n    function typedArrayFromBuffer(dataType, buffer) {\n      const types = {\n        'uint32': Uint32Array,\n        'uint16': Uint16Array,\n        'uint8': Uint8Array,\n        'uint8clamped': Uint8ClampedArray,\n        'int32': Int32Array,\n        'int16': Int16Array,\n        'int8': Int8Array,\n        'float32': Float32Array,\n        'float64': Float64Array\n      };\n      if (!types[dataType]) {\n        return buffer;\n      }\n      return new types[dataType](buffer);\n    }\n\n    function prepareTransferBuffers(hamsterFood) {\n      let buffers = [];\n      let key = null;\n      for (key in hamsterFood) {\n        if (hamsterFood.hasOwnProperty(key) && hamsterFood[key]) {\n          if(hamsterFood[key].buffer) {\n            buffers.push(hamsterFood[key].buffer);\n          } else if(Array.isArray(hamsterFood[key]) && typeof ArrayBuffer !== 'undefined') {\n            buffers.push(new ArrayBuffer(hamsterFood[key]));\n          }\n        }\n      }\n      return buffers;\n    }\n\n    self.onmessage = function(incomingMessage) {\n      params = incomingMessage.data;\n      rtn = {\n        data: [],\n        dataType: (params.dataType ? params.dataType.toLowerCase() : null)\n      };\n      if(params.importScripts) {\n        self.importScripts(params.importScripts);\n      }\n      new Function(params.hamstersJob)();\n      postMessage(prepareReturn(rtn), prepareTransferBuffers(rtn));\n    }\n  }\n\n  /**\n  * @function legacyScaffold - Provides library functionality for legacy devices\n  */\n  legacyScaffold(params, resolve) {\n    setTimeout(() => {\n      if(typeof self === 'undefined') {\n        var self = (global || window || this);\n      }\n      self.params = params;\n      self.rtn = {\n        data: []\n      };\n      params.hamstersJob();\n      resolve(rtn);\n    }, 4); //4ms delay (HTML5 spec minimum), simulate threading\n  }\n};\n\nvar hamstersWheel = new wheel();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersWheel;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/wheel.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nimport hamstersData from './data';\nimport hamstersHabitat from './habitat';\nimport hamstersLogger from './logger';\n\nclass pool {\n\t\n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.tasks = [];\n\t  this.threads = [];\n    this.running = [];\n    this.pending = [];\n    this.fetchHamster = this.grabHamster;\n  }\n\n  /**\n  * @function grabHamster - Adds task to queue waiting for available thread\n  * @param {object} array - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  addWorkToPending(array, task, persistence, wheel, resolve, reject) {\n  \tthis.pending.push(arguments);\n  }\n\n  /**\n  * @function grabHamster - Invokes processing of next item in queue\n  * @param {object} item - Task to process\n  */\n  processQueue(item, hamster) {\n  \treturn this.runTask(thread, hamster, item[0], item[1], item[2], item[3], item[4]);\n  }\n\n  /**\n  * @function grabHamster - Keeps track of threads running, scoped globally and to task\n  * @param {number} threadId - Id of thread\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  */\n  grabHamster(threadId, habitat) {\n    if(habitat.persistence) {\n      return this.threads[threadId];\n    }\n    return this.spawnHamster();\n  }\n\n  /**\n  * @function keepTrackOfThread - Keeps track of threads running, scoped globally and to task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {number} id - Id of thread to track\n  */\n  keepTrackOfThread(task, id) {\n    task.workers.push(id); //Keep track of threads scoped to current task\n    this.running.push(id); //Keep track of all currently running threads\n  }\n\n  /**\n  * @function registerTask - Adds task to execution pool based on id\n  * @param {number} id - Id of task to register\n  */\n  registerTask(id) {\n    this.tasks.push(id);\n  }\n\n  /**\n  * @function spawnHamsters - Spawns multiple new threads for execution\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {number} maxThreds - Max number of threads for this client\n  */\n  spawnHamsters(maxThreads) {\n    for (maxThreads; maxThreads > 0; maxThreads--) {\n      this.threads.push(this.spawnHamster());\n    }\n  }\n\n  /**\n  * @function spawnHamster - Spawns a new thread for execution\n  * @return {object} WebWorker - New WebWorker thread using selected scaffold\n  */\n  spawnHamster() {\n    let newWheel = hamstersHabitat.selectHamsterWheel();\n    if (hamstersHabitat.webWorker) {\n      return new hamstersHabitat.SharedWorker(newWheel, 'SharedHamsterWheel');\n    }\n    return new hamstersHabitat.Worker(newWheel);\n  }\n\n  /**\n  * @function prepareMeal - Prepares message to send to a thread and invoke execution\n  * @param {object} threadArray - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @return {object} hamsterFood - Prepared message to send to a thread\n  */\n  prepareMeal(threadArray, task) {\n    let hamsterFood = {\n    \tarray: threadArray\n    };\n    for (var key in task.input) {\n      if (task.input.hasOwnProperty(key) && ['array', 'threads'].indexOf(key) === -1) {\n        hamsterFood[key] = task.input[key];\n      }\n    }\n    return hamsterFood;\n  }\n\n  /**\n  * @function hamsterWheel - Runs function using thread\n  * @param {object} array - Provided data to execute logic on\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  runTask(hamster, array, task, scope, resolve, reject) {\n  \tlet threadId = this.running.length;\n    let hamsterFood = this.prepareMeal(array, task);\n    this.registerTask(task.id);\n    this.keepTrackOfThread(task, threadId);\n    if(scope.habitat.legacy) {\n      scope.habitat.legacyWheel(hamsterFood, resolve, reject);\n    } else {\n      this.trainHamster(task.count, task, hamster, scope, resolve, reject);\n      scope.data.feedHamster(hamster, hamsterFood, scope.habitat);\n    }\n    task.count += 1; //Increment count, thread is running\n  }\n\n  /**\n  * @function hamsterWheel - Runs or queues function using threads\n  * @param {object} array - Provided library functionality options for this task\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Results from select hamster wheel\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  hamsterWheel(thread, task, scope, resolve, reject) {\n    if(scope.maxThreads === this.running.length) {\n      return this.addWorkToPending(thread, task, scope, resolve, reject);\n    }\n    let hamster = this.grabHamster(this.running.length, scope.habitat);\n    let index = task.indexes[thread];\n    let subArray = scope.data.getSubArrayUsingIndex(task.input.array, index);\n    return this.runTask(hamster, subArray, task, scope, resolve, reject);\n  }\n\n  /**\n  * @function returnOutputAndRemoveTask - gathers thread outputs into final result\n  * @param {object} task - Provided library functionality options for this task\n  * @param {function} resolve - onSuccess method\n  */\n  returnOutputAndRemoveTask(task, resolve) {\n    let output = hamstersData.getOutput(task, hamstersHabitat.transferrable);\n    if (task.sort) {\n      output = hamstersData.sortOutput(output, task.sort);\n    }\n    this.tasks[task.id] = null; //Clean up our task, not needed any longer\n    resolve({\n      data: output\n    });\n  }\n\n  /**\n  * @function trainHamster - Trains thread in how to behave\n  * @param {number} threadId - Internal use id for this thread\n  * @param {object} task - Provided library functionality options for this task\n  * @param {worker} hamster - Thread to train\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} resolve - onSuccess method\n  * @param {function} reject - onError method\n  */\n  trainHamster(threadId, task, hamster, scope, resolve, reject) {\n    let pool = this;\n    // Handle successful response from a thread\n    function onThreadResponse(message) {\n      let results = message.data;\n      pool.running.splice(pool.running.indexOf(threadId), 1); //Remove thread from running pool\n    \ttask.workers.splice(task.workers.indexOf(threadId), 1); //Remove thread from task running pool\n      // String only communcation for rn...in 2k18\n      if(scope.habitat.reactNative) {\n        task.output[threadId] = JSON.parse(results.data);\n      } else {\n        task.output[threadId] = results.data;\n      }\n      if (task.workers.length === 0 && task.count === task.threads) {\n        pool.returnOutputAndRemoveTask(task, resolve);\n      }\n      if (pool.pending.length !== 0) {\n        pool.processQueue(pool.pending.shift(), hamster);\n      } else if (!scope.habitat.persistence && !scope.habitat.webWorker) {\n        hamster.terminate(); //Kill the thread only if no items waiting to run (20-22% performance improvement observed during testing, repurposing threads vs recreating them)\n      }\n    }\n    // Handle error response from a thread\n    function onThreadError(error) {\n      hamstersLogger.errorFromThread(error, reject);\n    }\n    // Register on message/error handlers\n    if (hamstersHabitat.webWorker) {\n      hamster.port.onmessage = onThreadResponse;\n      hamster.port.onmessageerror = onThreadError;\n      hamster.port.onerror = onThreadError;\n    } else {\n      hamster.onmessage = onThreadResponse;\n      hamster.onmessageerror = onThreadError;\n      hamster.onerror = onThreadError;\n    }\n  }\n\n  /**\n  * @function scheduleTask - Adds new task to the system for execution\n  * @param {object} task - Provided library functionality options for this task\n  * @param {boolean} persistence - Whether persistence mode is enabled or not\n  * @param {function} wheel - Scaffold to execute login within\n  * @param {number} maxThreads - Maximum number of threads for this client\n  */\n  scheduleTask(task, scope) {\n  \treturn new Promise((resolve, reject) => {\n      let i = 0;\n      while (i < task.threads) {\n        this.hamsterWheel(i, task, scope, resolve, reject);\n        i += 1;\n      }\n    });\n  }\n}\n\nvar hamsterPool = new pool();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamsterPool;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/pool.js","/* jshint esversion: 6, curly: true, eqeqeq: true, forin: true */\n\n/***********************************************************************************\n* Title: Hamsters.js                                                               *\n* Description: 100% Vanilla Javascript Multithreading & Parallel Execution Library *\n* Author: Austin K. Smith                                                          *\n* Contact: austin@asmithdev.com                                                    *  \n* Copyright: 2015 Austin K. Smith - austin@asmithdev.com                           * \n* License: Artistic License 2.0                                                    *\n***********************************************************************************/\n\n'use strict';\n\nclass memoizer {\n  \n  /**\n  * @constructor\n  * @function constructor - Sets properties for this class\n  */\n  constructor() {\n    this.maxCacheEntries = 25;\n    this.cacheEntries = [];\n    this.itemCached = this.isItemCached;\n    this.fetchItem = this.fetchItemFromCache;\n    this.saveItem = this.saveItemToCache;\n  }\n\n  /**\n  * @function isItemCached - Checks for existing data in cache\n  * @param {object} input - Provided library execution options\n  * @param {method} functionToRun - Function to execute\n  * @return {object} Execution results from cache, or false\n  */\n  isItemCached(input, method) {\n  \treturn !!(this.fetchItem({fn: method, data: input})) || false;\n  }\n\n  /**\n  * @function fetchItemFromCache - Fetches cache item from cache\n  * @param {object} cacheItem - Cache item to fetch\n  * @return {object} CacheResults, or false\n  */\n  fetchItemFromCache(cacheItem) {\n  \tlet cachedResult = null;\n    let key = null;\n    for(key of Object.keys(this.cacheEntries)) {\n      if((cacheItem[key].fn === cacheItem.fn) && (cacheItem[key].input === cacheItem.data)) {\n        cachedResult = cacheItem[key].input;\n      }\n    }\n  \treturn cachedResult || false;\n  }\n\n  /**\n  * @function isItemCached - Checks for existing data in cache\n  * @param {method} functionToRun - Function to execute\n  * @param {object} data - Execution results to cache\n  */\n  saveItemToCache(method, data, maxCacheEntries) {\n  \tlet itemToCache = {\n  \t\tfn: method,\n  \t\tinput: data\n  \t};\n  \tlet cachedItems = this.cacheEntries;\n  \tif(cachedItems.length < maxCacheEntries) {\n  \t\tcachedItems.push(itemToCache);\n  \t} else {\n  \t\tcachedItems.splice(0, 0, itemToCache); \n  \t}\n  \tthis.cacheEntries = cachedItems;\n  }\n}\n\nvar hamstersMemoizer = new memoizer();\n\nif(typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = hamstersMemoizer;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./core/memoizer.js"],"sourceRoot":""}